---
- name: dump all
  hosts: all

  vars:
  - manageiq_connection:
      url: "{{ manageiq_connection.url }}"
      validate_certs: False
      token: "{{ manageiq_connection.token }}"

#  roles:
#  - syncrou.manageiq-vmdb

 
  tasks:
  - name: Set the automate workspace url
    set_fact:
      aws_url: "{{ manageiq.api_url }}/api/{{ manageiq.automate_workspace }}"
  - name: Fetch the Workspace
    uri:
      url: "{{ aws_url }}"
      method: GET 
      validate_certs: False
      headers:
        X-Auth-Token: "{{ manageiq.api_token }}"
        Content-Type: "application/json" 
      status_code: 200 
    register: workspace
  - name: dump workspace
    debug: var=workspace

  - name: Fetch the task
    uri:
      url: "{{ manageiq.api_url }}/api/{{ manageiq.request_task }}"
      method: GET
      validate_certs: False
      headers:
        X-Auth-Token: "{{ manageiq.api_token }}"
        Content-Type: "application/json"
      status_code: 200
    register: request_task

  - name: dump request_task
    debug: var=request_task

  - name: Sanityify deep variables
    set_fact:
      options: "{{ request_task.json.options }}"
      root: "{{ workspace.json.input.objects.root }}"

  - name: dump option values
    debug: var=options

  - name: dump root values
    debug: var=root

  - name: set some vars
    set_fact:
      root_attrs: { 'name': 'Fred Flintstone', 'address': 'Bedrock' }
      state_attrs: { 'name': 'Wilma Flintstone', 'friend': 'Betty Rubble' }

  - name: Update the root object in the workspace
    uri:
      url: "{{ aws_url }}"
      method: POST
      body:
        action: edit
        resource: "{ 'objects': { 'root': {{ root_attrs }} }, 'state_vars': {{ state_attrs }}}"
      body_format: json
      validate_certs: False
      headers:
        X-Auth-Token: "{{ manageiq.api_token }}"
        Content-Type: "application/json" 
      status_code: 200
    register: output

#  - name: Get a vmdb object
#    manageiq_vmdb:
#      href: "{{ manageiq.request_task }}"
#    register: vmdb_object

#  - name: get variables
#    debug: var=hostvars[inventory_hostname]
#
